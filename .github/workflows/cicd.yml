name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: j22868706/taipeidaytrip_app:latest,j22868706/taipeidaytrip_app:${{ github.sha }}
          cache-from: type=registry,ref=j22868706/taipeidaytrip_app:latest
          cache-to: type=inline

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Check if container exists before stopping and removing it to avoid errors on first deployment
            sudo docker pull j22868706/taipeidaytrip_app:latest
            if [ "$(sudo docker ps -q -f name=app)" ]; then
              sudo docker stop app
              sudo docker rm app
            fi

            # 創建一個更新的 start.sh 文件，解決網絡延遲問題
            cat > start-updated.sh << 'EOF'
            #!/bin/bash

            # 等待數據庫連接
            echo "等待數據庫連接..."
            sleep 10

            # Start Gunicorn in daemon mode with increased timeout settings
            gunicorn -D -w 1 --worker-class eventlet --timeout 120 --access-logfile gunicorn_access.log --error-logfile gunicorn_error.log -b 0.0.0.0:3000 app:app

            # Start Nginx in foreground mode
            nginx -g 'daemon off;'
            EOF

            # 使其可執行
            chmod +x start-updated.sh

            # Run container with more complete configuration and host networking
            sudo docker run -d \
              --name app \
              --restart unless-stopped \
              --network host \
              -e host="taipeidaytripdb.codcq6aa85vr.us-east-1.rds.amazonaws.com" \
              -e port="3306" \
              -e user="${{ secrets.DB_USER }}" \
              -e password="${{ secrets.DB_PASSWORD }}" \
              -e database="${{ secrets.DB_NAME }}" \
              -v $(pwd)/start-updated.sh:/start-updated.sh \
              j22868706/taipeidaytrip_app:latest /start-updated.sh

            sleep 5
            sudo docker logs app

            # Verify the container is running
            sudo docker ps | grep app
